function renderInformation(type, data){
    switch(type)
    {
        case 'data':
            var result = "";
            $H(data).each(function(entity){
//                result += '<dl>';
//                entity.value.each(function(element){
//                    result += '<dd class="strong">' + element['name'] + '</dd><dt> ' + element['value'] + '</dt><br/>';
//                });       
//                result += '<dl/>';
//                }); 
                result += '<p>';
                entity.value.each(function(element){
                    result += '<span class="strong">' + element['name'] + '</span>:&nbsp;<span> ' + element['value'] + '</span><br/>';
                });       
                result += '<p/>';
                }); 
            return result;
        break;

        case 'images':
            var images = '';
            data.each(function(image, i){
                images += '<img src="http://' + image + '" style="margin-top: 10px;" width="160px"\><br\>';
            });
            return images;
        break;

        case 'path':
            var path = '';
            for (var entity in data){
                path += ' / ';
                path += '<a class="informationPathLink" href="#" onclick="get(\'information\', \'' + entity + '\'); return false;">';
                path += data[entity];
                path += '<a\>';
            }
            return path;
        break;

        case 'picture':
            return '<img src="http://' + data + '" width="100%"\>'
        break;

        case 'play':
            return '<a class="playMovieLink" href="#">Play movie<a>';
        break;

        case 'playlist':
                return '<a onclick="renderDraggablePlaylistItem(this, \''+data['id']+'\', \''+data['title']+'\');" class="addToPlaylistLink" href="#">Add to playlist</a>';
        break;
		
		   
		case 'browse':
                return '<a onclick="get(\'subtree\', \''+data['id']+'\');" class="browser" href="#">Browse</a>';
        break;
		
		case 'files':
                return '<a onclick="get(\'files\', \''+data['id']+'\');" class="browser" href="#">Files</a>';
        break;
		
		case 'subtree':
		
		
		
		
		/*
		
			var result = "<ul id='playlistTree'>";
	var s = "";
	for(i in data){	
		result += '<li class="playlist" id="playlist_' + i + '"><div class="buttons"><img class="playbutton button" src="/fluxcms/themes/3-cols/images/play_inv.png"></img><img class="removebutton button" src="/fluxcms/themes/3-cols/images/remove_inv.png"></img></div><div class="connectors"><img class="nodeicon"  src="/fluxcms/themes/3-cols/images/treeimgs/dark/node_closed.png"/></div><span class="opener">' +  data[i]['name'] + '</span><hr /><ul>';
		
		if(data[i]['playlist'].length != 0){
			for (var x in data[i]['playlist']){
					s +=data[i]['playlist'][x] + ":\n";
					
					var uniqueid = "playlistitem_" + x + "_" + Math.random();
					result += '<li class="playlistItem" id="'+ uniqueid +'"><div class="buttons"><img class="playbutton button" src="/fluxcms/themes/3-cols/images/play.png"></img><img class="removebutton button" src="/fluxcms/themes/3-cols/images/remove.png"></img></div><div class="connectors"><img align="right" class="icon"  src="/fluxcms/themes/3-cols/images/treeimgs/dark/leaf.png"/></div><span class="handle">' + data[i]['playlist'][x] + "</span></li>";
			}
		}
		result += "</ul></li>";
		
	}
	result += "</ul>";
		
		
		*/
		
			s = '<div style="width: 180px; overflow: hidden;" id="browseTreeDiv"><ul  id="browseTree">';
			x = 0;
			var recurse = function (obj){
				var i;
				for (i in obj){
					

					if(typeof(obj[i]) == "object"){						
						s += '<li><div class="buttons"><img class="playbutton button" src="/fluxcms/themes/3-cols/images/play_inv.png"></img><img class="removebutton button" src="/fluxcms/themes/3-cols/images/remove_inv.png"></img></div><div class="connectors"><img class="nodeicon" align="right"  src="/fluxcms/themes/3-cols/images/treeimgs/bright/node_closed.png"/></div><span class="opener"></span><span>' +  i + '</span><ul>';
						recurse(obj[i]);
						s += '</ul></li>';
					} else {
						s += '<li><div class="connectors"><img align="right" class="icon"  src="/fluxcms/themes/3-cols/images/treeimgs/bright/leaf.png"/></div><span class="handle"></span><span>' + obj[i] + '</span></li>'; 
					}

				}
			}
			
			recurse (data);
			s += "</ul><div>"; 
			return s;
		break;

        case 'fileTree':
			var result = '<div style="width: 180px; overflow: hidden;" id="browseTreeDiv"><ul  id="browseTree">';
           // result += toString($H(data), "", 1);
            
        
            $H(data).each(function(entity, i){
						result += '<li><div class="buttons"><img class="playbutton button" src="/fluxcms/themes/3-cols/images/play_inv.png"></img><img class="removebutton button" src="/fluxcms/themes/3-cols/images/remove_inv.png"></img></div><div class="connectors"><img class="nodeicon" align="right"  src="/fluxcms/themes/3-cols/images/treeimgs/bright/node_closed.png"/></div><span class="opener"></span><span>' + toString(entity, "", 1) + '</span><ul>';
                            entity.value.each(function(file){
                                result += '<li>';
                                result += file.name;//toString(file, "", 1);
                                result += '</li>';
                                
                                });
                            result += '</ul></li>';
                    });
            result += '</ul></div>';
            return result;
        break;
		
		
    }
}





function renderSearch(type, data)
{
    switch (type)
    {
        case 'thumbs':
            var result = '';
            data.each(function(entity, i){
                result += '<img src="' + entity.coverMedia + '" onclick="get(\'information\', \'' + entity.id + '\'); return false;" class="img""\><br\>';
            });
            return result;
        break;
        case 'advancedsearchbrowser':
            var result = "Keyword: <br/>Displayed " + data.page + " of " + data.pages + "<br/>";
            for (var i = 1; i <= data.pages; i++)
            {
                result += '<a href="#" onclick="page(' + i + ', \'' + data.search + '\'); return false;" class="';
                result += (i == data.page) ? 'redlink' : 'whitelink' ;
                result += '">' + i + '</a>';
            }
            
            return result;
        break;

        case 'advancedsearch':
            var result = '';
            var i = 1;
            document.getElementById("advancedSearchData").innerHTML = toString(data, "", 1);
            data.each(function(entity, i) {
                        result += '<div ';
                        if (i++ % 2 == 0){
                            result += "class='odd'>";
                        }else{
                            result += "class='even'>";
                        }
                        result += '<img src="';
                        result += entity.coverMedia;
                        result += '" class="advancedThumbs"/>';
                        result += '<span class="advancedTitle">';
                        result += entity.title;
                        result += '</span><br/>';
                        result += '<span>';
                        result += entity.description;
                        result += '</span><br/>';
                        result += '<a href="#" class="playMovieLink">Play This Movie</a>';
                        result += '<a onclick="renderDraggablePlaylistItem(this, \''+entity.id+'\', \''+entity.title+'\');" class="addToPlaylistLink" href="#">Add to playlist</a>';
                        result += '<a onclick="get(\'information\', \'' + entity.id + '\'); return false;" class="addToPlaylistLink" href="#">More Info</a>';
                        result += '</div>';
                    });
            return result;
        break;

        case 'collections':
            var result = '<dl>';
            var j = 0;
            for (var collection in data) {
                if (j++ > 0) 
                    result += '<dt class="withSeparation">';
                else
                    result += '<dt>';
                result += collection;
                result += '</dt>';
                for (var i = 0; i < data[collection].length; ++i) {
                    result += '<dd class="redWithA">';
                    result += '<a href="#" onclick="get(\'information\', \'' + data[collection][i]['id'] + '\'); return false;">';
                    result += data[collection][i]['title'];
                    result += '</a>';
                    result += '</dd>';
                    }
            }
            result += '</dl>';
            return result;
        break;

        case 'news':
            /* version with definition lists
            var result = '<dl>';
            for (var i = 0; i < data.length; ++i) {
                result += '<dt>';
                result += '<a href="#" onclick="get(\'information\', \'' + data[i]['id'] + '\'); return false;">';
                result += data[i]['date'];
                result += '</a>';
                result += '</dt>';
                result += '<dd>';
                result += '<a href="#" onclick="get(\'information\', \'' + data[i]['id'] + '\'); return false;">';
                result += data[i]['title'];
                result += '</a>';
                result += '</dd>';
            }
            result += '</dl>';
            return result;
            */
            var result = '<ul>';
            for (var i = 0; i < data.length; ++i) {
                result += '<li class="redWithA">';
                result += '<a href="#" onclick="get(\'information\', \'' + data[i]['id'] + '\'); return false;">';
                result += data[i]['date'];
                result += '&nbsp;';
                result += '&nbsp;';
                result += data[i]['title'];
                result += '</a>';
                result += '</li>';
            }
            result += '</ul>';
            return result;

        break;

        case 'title':
            var result = '<ul>';
                for (var i = 0; i < data.length; ++i) {
                    result += '<li class="redWithA">';
                    result += '<a href="#" onclick="get(\'information\', \'' + data[i]['id'] + '\'); return false;">';
                    result += data[i]['title'];
                    result += '</a>';
                    result += '</li>';
                }
            result += '</ul>';
            return result;
        break;
    }
}

function renderPlaylists(data){
	
	/*
	var i;
	var result = "<ul id='playlistTree'>";
	for(i in data){
		result += "<li><span class='buttons'></span><span class='nodeicon'></span><span class='opener'>" +  data[i]['name'] + "</span><ul>";
		for (var x in data[i]['playlist']){
				result += "<li class='playlistItem'><span class='buttons'></span><span class='nodeicon'></span><span class='handle'>" + data[i]['playlist'][x] + "</span></li>";
		}
		result += "</ul>";
	}
	result += "</ul>";
	*/


	var result = "<ul id='playlistTree'>";
	var s = "";
	for(i in data){	
		result += '<li class="playlist" id="playlist_' + i + '"><div class="buttons"><img class="playbutton button" src="/fluxcms/themes/3-cols/images/play_inv.png"></img><img class="removebutton button" src="/fluxcms/themes/3-cols/images/remove_inv.png"></img></div><div class="connectors"><img class="nodeicon"  src="/fluxcms/themes/3-cols/images/treeimgs/dark/node_closed.png"/></div><span class="opener">' +  data[i]['name'] + '</span><hr /><ul>';
		
		if(data[i]['playlist'].length != 0){
			for (var x in data[i]['playlist']){
					s +=data[i]['playlist'][x] + ":\n";
					
					var uniqueid = "playlistitem_" + x + "_" + Math.random();
					result += '<li class="playlistItem" id="'+ uniqueid +'"><div class="buttons"><img class="playbutton button" src="/fluxcms/themes/3-cols/images/play.png"></img><img class="removebutton button" src="/fluxcms/themes/3-cols/images/remove.png"></img></div><div class="connectors"><img align="right" class="icon"  src="/fluxcms/themes/3-cols/images/treeimgs/dark/leaf.png"/></div><span class="handle">' + data[i]['playlist'][x] + "</span></li>";
			}
		}
		result += "</ul></li>";
		
	}
	result += "</ul>";
	// alert(s);
	
	return result;
	
	
}

function renderDraggablePlaylistItem(trigger, id, label){	
	var li = "<ul><li class='addToPlaylist'>" + label+ "</li>";
	var dummy = document.getElementById("dummy");
	dummy.innerHTML = li;
	document.onmousemove = updateMousePos;				
	function updateMousePos (e){
		var tip = document.getElementById("dummy");
		var x = (document.all) ? window.event.x + document.body.scrollLeft : e.pageX;
		var y = (document.all) ? window.event.y + document.body.scrollTop  : e.pageY;
		if (tip != null) {
			tip.style.left = (x) + "px";
			tip.style.top 	= (y) + "px";
		}
		
	}
}



