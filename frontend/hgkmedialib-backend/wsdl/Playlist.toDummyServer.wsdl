<?xml version="1.0"?>
<definitions xmlns="http://schemas.xmlsoap.org/wsdl/"
xmlns:tns="http://media1.hgkz.ch/hgkmedialib-backend/inc/HGKMediaLib/SoapTestServer/Playlist.php"
xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
xmlns:xsd="http://www.w3.org/2001/XMLSchema"
xmlns:soap-enc="http://schemas.xmlsoap.org/soap/encoding/"
name="HGKMediaLib_PlaylistInterface"
targetNamespace="http://media1.hgkz.ch/hgkmedialib-backend/inc/HGKMediaLib/SoapTestServer/Playlist.php">

  <documentation>Central playlist interface for SOAP access to the
  backend Copyright 2005-2006 Pierre Spring, mediagonal Ag
  &lt;pierre.spring@mediagonal.ch&gt; See the enclosed file COPYING
  for license information ( GPL). If you did not receive this file,
  see http://www.fsf.org/copyleft/gpl.html.) Interface declaring
  the signatures of methods being called by the HGKZ video
  library's frontend component. The frontend reads one user's
  playlist and can get a playlist recomended by the admin and let's
  one user add and remove an entity to her playlist. Presumably
  there will be two classes that implement this interface: one on
  the serving side (connected to a SOAP server), and another one on
  the requesting side ( connected to a SOAP client generated from
  the server's WSDL).</documentation>
  <portType name="HGKMediaLib_PlaylistInterfacePort">
    <operation name="addEntityToPlaylist">
      <input message="tns:addEntityToPlaylistRequest" />
      <output message="tns:addEntityToPlaylistResponse" />
    </operation>
    <operation name="createPlaylist">
      <input message="tns:createPlaylistRequest" />
      <output message="tns:createPlaylistResponse" />
    </operation>
    <operation name="getPlaylists">
      <input message="tns:getPlaylistsRequest" />
      <output message="tns:getPlaylistsResponse" />
    </operation>
    <operation name="removeEntityFromPlaylist">
      <input message="tns:removeEntityFromPlaylistRequest" />
      <output message="tns:removeEntityFromPlaylistResponse" />
    </operation>
    <operation name="updatePlaylist">
      <input message="tns:updatePlaylistRequest" />
      <output message="tns:updatePlaylistResponse" />
    </operation>
    <operation name="removePlaylist">
      <input message="tns:removePlaylistRequest" />
      <output message="tns:removePlaylistResponse" />
    </operation>
    <operation name="setPlaylistAuthorization">
      <input message="tns:setPlaylistAuthorizationRequest" />
      <output message="tns:setPlaylistAuthorizationResponse" />
    </operation>
  </portType>
  <binding name="HGKMediaLib_PlaylistInterfaceBinding"
  type="tns:HGKMediaLib_PlaylistInterfacePort">
    <soap:binding style="rpc"
    transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="addEntityToPlaylist">
      <input>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </input>
      <output>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </output>
      <soap:operation soapAction="http://media1.hgkz.ch/hgkmedialib-backend/inc/HGKMediaLib/SoapTestServer/Playlist.php#addEntityToPlaylist" />
    </operation>
    <operation name="createPlaylist">
      <input>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </input>
      <output>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </output>
      <soap:operation soapAction="http://media1.hgkz.ch/hgkmedialib-backend/inc/HGKMediaLib/SoapTestServer/Playlist.php#createPlaylist" />
    </operation>
    <operation name="getPlaylists">
      <input>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </input>
      <output>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </output>
      <soap:operation soapAction="http://media1.hgkz.ch/hgkmedialib-backend/inc/HGKMediaLib/SoapTestServer/Playlist.php#getPlaylists" />
    </operation>
    <operation name="removeEntityFromPlaylist">
      <input>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </input>
      <output>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </output>
      <soap:operation soapAction="http://media1.hgkz.ch/hgkmedialib-backend/inc/HGKMediaLib/SoapTestServer/Playlist.php#removeEntityFromPlaylist" />
    </operation>
    <operation name="updatePlaylist">
      <input>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </input>
      <output>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </output>
      <soap:operation soapAction="http://media1.hgkz.ch/hgkmedialib-backend/inc/HGKMediaLib/SoapTestServer/Playlist.php#updatePlaylist" />
    </operation>
    <operation name="removePlaylist">
      <input>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </input>
      <output>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </output>
      <soap:operation soapAction="http://media1.hgkz.ch/hgkmedialib-backend/inc/HGKMediaLib/SoapTestServer/Playlist.php#removePlaylist" />
    </operation>
    <operation name="setPlaylistAuthorization">
      <input>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </input>
      <output>
        <soap:body use="encoded"
        encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </output>
      <soap:operation soapAction="http://media1.hgkz.ch/hgkmedialib-backend/inc/HGKMediaLib/SoapTestServer/Playlist.php#setPlaylistAuthorization" />
    </operation>
  </binding>
  <service name="HGKMediaLib_PlaylistInterfaceService">
    <port name="tns:HGKMediaLib_PlaylistInterfacePort"
    binding="tns:HGKMediaLib_PlaylistInterfaceBinding">
      <soap:address location="http://media1.hgkz.ch/hgkmedialib-backend/inc/HGKMediaLib/SoapTestServer/Playlist.php" />
    </port>
  </service>
  <message name="addEntityToPlaylistRequest">
    <part name="session" type="xsd:anyType" />
    <part name="playlistID" type="xsd:anyType" />
    <part name="entityID" type="xsd:anyType" />
    <part name="position" type="xsd:int" />
    <documentation>Add an entity ($entityID) to the playlist
    defined by $playlistID  of the user ($sessionID) at a given
    $position. Return the name of  the entity on success as a
    string, false else. </documentation>
  </message>
  <message name="addEntityToPlaylistResponse">
    <part name="addEntityToPlaylistReturn" type="xsd:anyType" />
    <documentation></documentation>
  </message>
  <message name="createPlaylistRequest">
    <part name="session" type="xsd:anyType" />
    <part name="playlistName" type="xsd:anyType" />
    <documentation>Create a new playlist for a given user. Return
    the id of the new playlisit on success, false else.
    </documentation>
  </message>
  <message name="createPlaylistResponse">
    <part name="createPlaylistReturn" type="xsd:anyType" />
    <documentation></documentation>
  </message>
  <message name="getPlaylistsRequest">
    <part name="session" type="xsd:anyType" />
    <documentation>Get a $user's playlist. The $user has two
    predefined values: 'self': the user refered to by the $session
    id 'recommended': the playlist recommended by the admin Any
    other string in the $user parameter specifies another user by
    her login. The function returns an array of
    HGKMediaLib_Struct_Playlist on success, O else.
    </documentation>
  </message>
  <message name="getPlaylistsResponse">
    <part name="getPlaylistsReturn" type="soap-enc:Array" />
    <documentation>of HGKMediaLib_Struct_Playlist</documentation>
  </message>
  <message name="removeEntityFromPlaylistRequest">
    <part name="session" type="xsd:anyType" />
    <part name="playlistID" type="xsd:anyType" />
    <part name="entityID" type="xsd:anyType" />
    <documentation>Remove an entity ($entityID) from playlist
    defined by $playlistID of the user ($sessionID).  Return true
    by success, false else. </documentation>
  </message>
  <message name="removeEntityFromPlaylistResponse">
    <part name="removeEntityFromPlaylistReturn"
    type="xsd:boolean" />
    <documentation></documentation>
  </message>
  <message name="updatePlaylistRequest">
    <part name="session" type="xsd:anyType" />
    <part name="playlistID" type="xsd:anyType" />
    <part name="array" type="xsd:anyType" />
    <documentation>update a playlist</documentation>
  </message>
  <message name="updatePlaylistResponse">
    <part name="updatePlaylistReturn"
    type="xsd:boolean" />
    <documentation></documentation>
  </message>
  <message name="removePlaylistRequest">
    <part name="session" type="xsd:anyType" />
    <part name="playlistID" type="xsd:anyType" />
    <documentation>Remove a playlist defined by $playlistID of the
    user ($sessionID).  Return true by success, false else.
    </documentation>
  </message>
  <message name="removePlaylistResponse">
    <part name="removePlaylistReturn" type="xsd:boolean" />
    <documentation></documentation>
  </message>
  <message name="setPlaylistAuthorizationRequest">
    <part name="session" type="xsd:anyType" />
    <part name="playlistID" type="xsd:anyType" />
    <part name="authorization" type="xsd:string" />
    <documentation>Set the authorization level of a playlist, where
    $authorization is a string of the following list:  'private'
    is a list, that only the ures that created it can see 'public
    read' is a list, that everyone can read 'public write' is a
    list, that everyone can read and add/remove  it returns true,
    false else </documentation>
  </message>
  <message name="setPlaylistAuthorizationResponse">
    <part name="setPlaylistAuthorizationReturn"
    type="xsd:boolean" />
    <documentation></documentation>
  </message>
</definitions>
